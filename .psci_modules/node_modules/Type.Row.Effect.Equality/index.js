"use strict";
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Flipmode = function (x) {
    return x;
};

// | This type class asserts that effect rows `a` and `b` are equal.

// |

// | The functional dependencies and the single instance below will force the

// | two type arguments to unify when either one is known.

// |

// | Note: any instance will necessarily ovelap with `refl` below, so instances

// | of this class should not be defined in libraries.
var EffectRowEquals = function (from, to) {
    this.from = from;
    this.to = to;
};
var unflip = function (v) {
    return v;
};
var to = function (dict) {
    return dict.to;
};
var refl = new EffectRowEquals(function (a) {
    return a;
}, function (a) {
    return a;
});
var from = function (dict) {
    return dict.from;
};

// | A version of `to` that can be applied to types like `Eff`, `Aff`, etc.
var effTo = function (dictEffectRowEquals) {
    return function (e) {
        return unflip(to(dictEffectRowEquals)(e));
    };
};

// | A version of `from` that can be applied to types like `Eff`, `Aff`, etc.
var effFrom = function (dictEffectRowEquals) {
    return function (e) {
        return unflip(from(dictEffectRowEquals)(e));
    };
};
module.exports = {
    EffectRowEquals: EffectRowEquals, 
    effFrom: effFrom, 
    effTo: effTo, 
    from: from, 
    to: to, 
    refl: refl
};
